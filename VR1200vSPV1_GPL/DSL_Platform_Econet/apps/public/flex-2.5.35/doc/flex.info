This is flex.info, produced by makeinfo version 4.13 from flex.texi.

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* flex: (flex).      Fast lexical analyzer generator (lex replacement).
END-INFO-DIR-ENTRY

   The flex manual is placed under the same licensing conditions as the
rest of flex:

   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007 The Flex
Project.

   Copyright (C) 1990, 1997 The Regents of the University of California.
All rights reserved.

   This code is derived from software contributed to Berkeley by Vern
Paxson.

   The United States Government has rights in this work pursuant to
contract no. DE-AC03-76SF00098 between the United States Department of
Energy and the University of California.

   Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1.  Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

   Neither the name of the University nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

   THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


Indirect:
flex.info-1: 1621
flex.info-2: 287713

Tag Table:
(Indirect)
Node: Top1621
Node: Copyright7687
Node: Reporting Bugs9200
Node: Introduction9505
Node: Simple Examples10333
Node: Format13640
Node: Definitions Section14053
Ref: Definitions Section-Footnote-116311
Node: Rules Section16379
Node: User Code Section17536
Node: Comments in the Input17974
Node: Patterns19341
Ref: case and character ranges26165
Node: Matching30176
Node: Actions33460
Node: Generated Scanner42431
Node: Start Conditions47446
Node: Multiple Input Buffers57990
Ref: Scanning Strings64526
Node: EOF66156
Node: Misc Macros67742
Node: User Values70594
Node: Yacc72925
Node: Scanner Options73820
Node: Options for Specifying Filenames76576
Ref: option-header76802
Ref: option-outfile77514
Ref: option-stdout77839
Node: Options Affecting Scanner Behavior78821
Ref: option-case-insensitive79062
Ref: option-lex-compat79495
Ref: option-batch80027
Ref: option-interactive80551
Ref: option-7bit81905
Ref: option-8bit83209
Ref: option-default83621
Ref: option-always-interactive83685
Ref: option-posix84289
Ref: option-stack85436
Ref: option-stdinit85544
Ref: option-yylineno86022
Ref: option-yywrap86465
Node: Code-Level And API Options86733
Ref: option-ansi-definitions86960
Ref: option-ansi-prototypes87212
Ref: option-bison-bridge87459
Ref: option-bison-locations87798
Ref: option-noline88058
Ref: option-reentrant88572
Ref: option-c++89183
Ref: option-array89309
Ref: option-pointer89407
Ref: option-prefix89535
Ref: option-main91063
Ref: option-nounistd91247
Ref: option-yyclass91755
Node: Options for Scanner Speed and Size92241
Ref: option-align92790
Ref: option-ecs93291
Ref: option-meta-ecs94327
Ref: option-read94814
Ref: option-full96696
Ref: option-fast96891
Node: Debugging Options97816
Ref: option-backup98003
Ref: option-debug98548
Ref: option-perf-report99270
Ref: option-nodefault99896
Ref: option-trace100214
Ref: option-nowarn100505
Ref: option-verbose100573
Ref: option-warn101002
Node: Miscellaneous Options101221
Node: Performance101678
Node: Cxx111927
Node: Reentrant119448
Node: Reentrant Uses120125
Node: Reentrant Overview121686
Node: Reentrant Example122485
Node: Reentrant Detail123259
Node: Specify Reentrant123692
Node: Extra Reentrant Argument124339
Node: Global Replacement125590
Node: Init and Destroy Functions126818
Node: Accessor Methods129328
Node: Extra Data130670
Node: About yyscan_t132935
Node: Reentrant Functions133330
Ref: bison-functions134812
Node: Lex and Posix135551
Node: Memory Management142929
Ref: memory-management143075
Node: The Default Memory Management143303
Ref: The Default Memory Management-Footnote-1147112
Node: Overriding The Default Memory Management147265
Ref: Overriding The Default Memory Management-Footnote-1149662
Node: A Note About yytext And Memory149826
Node: Serialized Tables151059
Ref: serialization151203
Node: Creating Serialized Tables151968
Node: Loading and Unloading Serialized Tables153576
Node: Tables File Format155344
Node: Diagnostics162358
Node: Limitations165767
Node: Bibliography167715
Node: FAQ168388
Node: When was flex born?172628
Node: How do I expand backslash-escape sequences in C-style quoted strings?173005
Node: Why do flex scanners call fileno if it is not ANSI compatible?174309
Node: Does flex support recursive pattern definitions?175104
Node: How do I skip huge chunks of input (tens of megabytes) while using flex?175950
Node: Flex is not matching my patterns in the same order that I defined them.176417
Node: My actions are executing out of order or sometimes not at all.178162
Node: How can I have multiple input sources feed into the same scanner at the same time?178935
Node: Can I build nested parsers that work with the same input file?180923
Node: How can I match text only at the end of a file?181929
Node: How can I make REJECT cascade across start condition boundaries?182733
Node: Why cant I use fast or full tables with interactive mode?183747
Node: How much faster is -F or -f than -C?185005
Node: If I have a simple grammar cant I just parse it with flex?185317
Node: Why doesn't yyrestart() set the start state back to INITIAL?185798
Node: How can I match C-style comments?186425
Node: The period isn't working the way I expected.187235
Node: Can I get the flex manual in another format?188482
Node: Does there exist a "faster" NDFA->DFA algorithm?188971
Node: How does flex compile the DFA so quickly?189481
Node: How can I use more than 8192 rules?190448
Node: How do I abandon a file in the middle of a scan and switch to a new file?191858
Node: How do I execute code only during initialization (only before the first scan)?192411
Node: How do I execute code at termination?193188
Node: Where else can I find help?193514
Node: Can I include comments in the "rules" section of the file?193887
Node: I get an error about undefined yywrap().194266
Node: How can I change the matching pattern at run time?194742
Node: How can I expand macros in the input?195104
Node: How can I build a two-pass scanner?196136
Node: How do I match any string not matched in the preceding rules?197052
Node: I am trying to port code from AT&T lex that uses yysptr and yysbuf.197961
Node: Is there a way to make flex treat NULL like a regular character?198756
Node: Whenever flex can not match the input it says "flex scanner jammed".199277
Node: Why doesn't flex have non-greedy operators like perl does?199920
Node: Memory leak - 16386 bytes allocated by malloc.201273
Ref: faq-memory-leak201571
Node: How do I track the byte offset for lseek()?202538
Node: How do I use my own I/O classes in a C++ scanner?204047
Node: How do I skip as many chars as possible?204890
Node: deleteme00205964
Node: Are certain equivalent patterns faster than others?206404
Node: Is backing up a big deal?209822
Node: Can I fake multi-byte character support?211728
Node: deleteme01213169
Node: Can you discuss some flex internals?214278
Node: unput() messes up yy_at_bol216522
Node: The | operator is not doing what I want217624
Node: Why can't flex understand this variable trailing context pattern?219170
Node: The ^ operator isn't working220419
Node: Trailing context is getting confused with trailing optional patterns221654
Node: Is flex GNU or not?222897
Node: ERASEME53224570
Node: I need to scan if-then-else blocks and while loops225340
Node: ERASEME55226539
Node: ERASEME56227637
Node: ERASEME57228995
Node: Is there a repository for flex scanners?229993
Node: How can I conditionally compile or preprocess my flex input file?230308
Node: Where can I find grammars for lex and yacc?230781
Node: I get an end-of-buffer message for each character scanned.231128
Node: unnamed-faq-62231723
Node: unnamed-faq-63232741
Node: unnamed-faq-64234038
Node: unnamed-faq-65235004
Node: unnamed-faq-66235790
Node: unnamed-faq-67236905
Node: unnamed-faq-68237892
Node: unnamed-faq-69239034
Node: unnamed-faq-70239747
Node: unnamed-faq-71240508
Node: unnamed-faq-72241717
Node: unnamed-faq-73242760
Node: unnamed-faq-74243684
Node: unnamed-faq-75244629
Node: unnamed-faq-76245761
Node: unnamed-faq-77246467
Node: unnamed-faq-78247360
Node: unnamed-faq-79248358
Node: unnamed-faq-80250058
Node: unnamed-faq-81251376
Node: unnamed-faq-82254176
Node: unnamed-faq-83255133
Node: unnamed-faq-84256913
Node: unnamed-faq-85258016
Node: unnamed-faq-86259023
Node: unnamed-faq-87259961
Node: unnamed-faq-88260607
Node: unnamed-faq-90261438
Node: unnamed-faq-91262701
Node: unnamed-faq-92265129
Node: unnamed-faq-93265628
Node: unnamed-faq-94266555
Node: unnamed-faq-95267967
Node: unnamed-faq-96269485
Node: unnamed-faq-97270244
Node: unnamed-faq-98270911
Node: unnamed-faq-99271576
Node: unnamed-faq-100272505
Node: unnamed-faq-101273215
Node: What is the difference between YYLEX_PARAM and YY_DECL?274028
Node: Why do I get "conflicting types for yylex" error?274549
Node: How do I access the values set in a Flex action from within a Bison action?275079
Node: Appendices275510
Node: Makefiles and Flex275717
Ref: Makefiles and Flex-Footnote-1278913
Ref: Makefiles and Flex-Footnote-2279030
Ref: Makefiles and Flex-Footnote-3279216
Node: Bison Bridge279267
Ref: Bison Bridge-Footnote-1281932
Node: M4 Dependency282124
Ref: M4 Dependency-Footnote-1283529
Node: Common Patterns283664
Node: Numbers283955
Node: Identifiers284931
Node: Quoted Constructs285758
Node: Addresses286810
Node: Indices287475
Node: Concept Index287713
Node: Index of Functions and Macros312996
Node: Index of Variables317892
Node: Index of Data Types319558
Node: Index of Hooks320446
Node: Index of Scanner Options321014

End Tag Table
